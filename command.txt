docker network create internal-container-network

mvn clean package -DskipTests=true
docker build -t asia.gcr.io/jasonpengtw-gke-1/spring-boot-websocket-chat-demo:latest .

docker run --rm --network internal-container-network --name postgres121 -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres

docker run --rm --network internal-container-network -p 8080:8080 -e SPRING_PROFILES_ACTIVE=gke asia.gcr.io/jasonpengtw-gke-1/spring-boot-websocket-chat-demo:latest

gcloud auth login
gcloud auth configure-docker
docker login -u oauth2accesstoken -p "$(gcloud auth print-access-token)" https://asia.gcr.io
gcloud docker -- push asia.gcr.io/jasonpengtw-gke-1/spring-boot-websocket-chat-demo:latest




## rum local
docker run --name postgres121 -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres
docker exec -it postgres121 /bin/bash
psql -U postgres


## Cloud Run
kubectl create ns test
gcloud beta run deploy webchat --platform gke --cluster stage-cluster --cluster-location asia-east1-a \
  --namespace test --image=asia.gcr.io/jasonpengtw-gke-1/web-chat:latest \
  --set-env-vars SPRING_PROFILES_ACTIVE=stage,DB_URL=jdbc:postgresql://postgres-service:5432/postgres?prepareThreshold=0,DB_USERNAME=postgres,DB_PASSWORD=postgres